<html>
    <head>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" 
        integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous">

        <script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js" 
        integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js" 
        integrity="sha384-fQybjgWLrvvRgtW6bFlB7jaZrFsaBXjsOMm/tB9LTS58ONXgqbR9W8oWht/amnpF" crossorigin="anonymous"></script>


        <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.0.4/socket.io.js"></script>
        <script src="https://code.jquery.com/jquery-3.6.0.js"
        integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=" crossorigin="anonymous"></script>

        <link rel="stylesheet" type="text/css" href="/css/chat_style.css">
        <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
    </head>

    <body>
        <!-- <input type="text" id="chat" placeholder="채팅 메세지 입력">
        <button type="button" onclick="a();">버튼</button>
        <div id ="content"></div> -->
        <div class="userList">
            <h2>현재 접속자</h2>
            <ul id="userList"></ul>
        </div>
        <div id="main">
            <div id="usercount" class="mt-4"></div>
            <div id="chat">
                <img src="https://bootdey.com/img/Content/avatar/avatar8.png" alt="avatar">
            </div>
            <div style="text-align: center;">
                <input type="text" id="test" placeholder="채팅 메세지 입력">
                <button type="button" onclick="a();">버튼</button>
            </div>
        </div>

        <script>
            const socket = io.connect();

            // 접속되었을 때 실행
            socket.on( "connect", function() {
                console.log( "server connected!" );

                // 이름을 입력받는다.
                var name = prompt('너의 이름은?')

                // 이름이 빈칸인 경우
                if (!name) {
                    name = '익명'
                }
                // 서버에 새로운 유저가 왔다고 알리는 알림
                socket.emit('newUser', name );
            });


            // 서버에 현재 접속해 있는 인원 알려주기
            socket.on('usercount', (count) => {
                var userCounter = document.getElementById('usercount');
                userCounter.innerText = "현재 " + count + "명이 서버에 접속해있습니다.";
            });

            function fnUpdateUserList(userList) {
                $('#userList').text("");
                for (i = 0; i < userList.length; i++) {
                    $('#userList').append($('<li>').text(userList[i]));
                };
            };

            // 서버로부터 데이터를 받은 경우
            socket.on( 'update', ( data ) => {

                var chat = document.getElementById("chat");

                var message = document.createElement("div");
                var node = document.createTextNode(`${data.name}: ${data.message}`);
                var className = "";

                // 타입에 따라 적용할 클래스를 다르게 지정
                switch ( data.type ) {
                    case 'message':
                        className = 'other';
                        break;

                    case 'connect':
                        className = 'connect';
                        fnUpdateUserList( data.userList );
                        break;

                    case 'disconnect':
                        className = 'disconnect';
                        fnUpdateUserList( data.userList );
                        break;
                }

                if ( data.type != 'message' ) {

                    var message = document.createElement("div");
                    var node = document.createTextNode(`${data.message}`);
                };

                message.classList.add(className);
                message.appendChild(node);
                chat.append(message);
            });



            // 메세지 전송 함수
            function a(){

                // 입력되어있는 데이터 가져오기
                var message = document.getElementById('test').value;

                // 가져왔으니 데이터 빈칸으로 변경
                document.getElementById('test').value = "";

                // 자기가 전송할 메시지를 클라이언트에게 표시하기
                var chat = document.getElementById('chat');
                var msg = document.createElement('div');
                var node = document.createTextNode(message);

                msg.classList.add('me');
                msg.appendChild(node);
                chat.appendChild(msg);


                // 서버에 message 이벤트 전달 데이터와 함께
                socket.emit( "message", { type:'message', message: message } )
            };

            $("#test").keyup (function (key) {

                if(key.keyCode==13) { // 엔터 눌렀을 때
                    a();
                }
            });
        </script>
    </body>
</html>